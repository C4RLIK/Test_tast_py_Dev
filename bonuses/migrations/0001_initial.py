# Generated by Django 5.2.5 on 2025-08-30 11:47

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BoostType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название типа бонуса')),
                ('boost_type', models.CharField(choices=[('daily_login', 'Ежедневный вход'), ('consecutive_login', 'Бонус за серию входов'), ('quest_completion', 'Завершение задания'), ('manual', 'Ручное начисление')], max_length=20, verbose_name='Тип бонуса')),
                ('points', models.PositiveIntegerField(verbose_name='Количество очков')),
                ('consecutive_days_required', models.PositiveIntegerField(default=0, help_text='Только для бонусов за серию входов', verbose_name='Требуемое количество дней подряд')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Тип бонуса',
                'verbose_name_plural': 'Типы бонусов',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_login_date', models.DateField(blank=True, null=True)),
                ('consecutive_login_days', models.PositiveIntegerField(default=0)),
                ('total_login_days', models.PositiveIntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='player', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Игрок',
                'verbose_name_plural': 'Игроки',
            },
        ),
        migrations.CreateModel(
            name='Boost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_awarded', models.PositiveIntegerField(verbose_name='Начисленные очки')),
                ('awarded_at', models.DateTimeField(auto_now_add=True, verbose_name='Время начисления')),
                ('reason', models.TextField(blank=True, verbose_name='Причина начисления')),
                ('awarded_by', models.ForeignKey(blank=True, help_text='Только для ручных начислений', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Кем начислено')),
                ('boost_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bonuses.boosttype', verbose_name='Тип бонуса')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boosts', to='bonuses.player')),
            ],
            options={
                'verbose_name': 'Бонус',
                'verbose_name_plural': 'Бонусы',
                'ordering': ['-awarded_at'],
            },
        ),
        migrations.CreateModel(
            name='Quest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название задания')),
                ('description', models.TextField(verbose_name='Описание задания')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активно')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('boost_type', models.ForeignKey(limit_choices_to={'boost_type': 'quest_completion'}, on_delete=django.db.models.deletion.CASCADE, to='bonuses.boosttype', verbose_name='Тип бонуса за выполнение')),
            ],
            options={
                'verbose_name': 'Задание',
                'verbose_name_plural': 'Задания',
            },
        ),
        migrations.CreateModel(
            name='PlayerQuest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quests', to='bonuses.player')),
                ('quest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bonuses.quest')),
            ],
            options={
                'verbose_name': 'Выполнение задания игроком',
                'verbose_name_plural': 'Выполнения заданий игроками',
                'unique_together': {('player', 'quest')},
            },
        ),
    ]
